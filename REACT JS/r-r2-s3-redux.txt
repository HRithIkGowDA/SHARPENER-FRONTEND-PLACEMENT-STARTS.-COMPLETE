React JS Round 2 - SET 3 -Redux- Solutions




1) Redux is a JavaScript library that helps manage the state of a web application. It uses a centralized store to hold the state of the application, and actions and reducers to update the state in a predictable way.



2) Redux is needed when an application's state becomes too complex to manage using just the local state of individual components. It allows for better organization and management of the state, making it easier to understand and predict how the state will change in response to different actions. Additionally, using Redux allows for better performance by minimizing the number of re-renders that need to occur when the state changes.



3) Flux is an architecture pattern for building web applications. It is often used in conjunction with React and provides a way to manage the state of the application in a predictable and organized way. Redux is a library that implements the Flux architecture pattern.



4) The core principles of Redux are:

Single source of truth: The state of the entire application is stored in a single store
State is read-only: The only way to change the state is to dispatch an action
Changes are made with pure functions: Reducers are pure functions that take the current state and an action, and return the next state


5) Pure functions are functions that always return the same output for a given input, without modifying the input and without modifying any variables outside the function. In Redux, reducers are pure functions that take the current state and an action, and return the next state.



6) No, Redux is not limited to being used with React. It can be used with any JavaScript framework or library.



7) The decision on which state to make a reducer and which state to make local state depends on the requirements of the application. Generally, state that needs to be shared across multiple components should be placed in the redux store, while state that is only used by a single component can be kept in the component's local state. Additionally, state that is complex or needs to be modified in response to multiple actions should be placed in the redux store, while simple state can be kept in local state.

